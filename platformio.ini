; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = lolin_c3_mini

[common]
platform = espressif32@6.1.0
framework = arduino
build_flags = -DAPP_VERSION=\"1.11.0\" 
  -Iprivate -Iconfig -DDEBUG_ENABLED 
  -D PIOENV=\"$PIOENV\" -D PIOPLATFORM=\"$PIOPLATFORM\" 
  -D PIOFRAMEWORK=\"$PIOFRAMEWORK\"
extra_scripts = post:extra_script.py
monitor_speed = 115200
upload_speed = 460800

[env:esp32-c3-devkitm-1]
extends = common
board = esp32-c3-devkitm-1
build_flags = ${common.build_flags} -DBOARD_LED_ON=0 -DESP32C3

[env:lolin_c3_mini]
extends = common
board = lolin_c3_mini
build_flags = ${common.build_flags} -DBOARD_LED_ON=0 -DESP32C3
lib_deps = Freenove WS2812 Lib for ESP32@1.0.5

; Ai-Thinker ESP-C3-M1-I-Kit
[env:esp32-c3-m1i-kit]
extends = common
board = esp32-c3-m1i-kit
build_flags = ${common.build_flags} -DBOARD_LED_ON=0 -DESP32C3

[env:esp32-s3-devkitc-1]
extends = common
board = esp32-s3-devkitc-1
build_flags = ${common.build_flags} -DBOARD_LED_ON=0 -DESP32S3

[env:lolin_s3]
extends = common
board = lolin_s3
build_flags = ${common.build_flags} -DBOARD_LED_ON=0 -DESP32S3

[env:esp32-poe]
extends = common
board = esp32-poe
build_flags = ${common.build_flags} -DBUILTIN_LED=33 -DBOARD_LED_ON=0 -DHAVE_ETH_IF
;upload_command = ./private/upload-esp32-poe.sh

[env:esp32-s2-saola-1]
extends = common
board = esp32-s2-saola-1
build_flags = ${common.build_flags} -DESP32S2 
# upload_command = ./private/upload-esp32-s2-saola-1.sh

[env:lilygo-t-eth-poe]
extends = common
board = lilygo-t-eth-poe
build_flags = ${common.build_flags} -DTEST_BUTTONS -DHAVE_ETH_IF -DBOARD_HAS_SDCARD_SLOT
;upload_port = dummy
;upload_command = ./private/upload-lilygo-t-eth-poe.sh

[env:wt32-eth01]
extends = common
board = wt32-eth01
build_flags = ${common.build_flags} -DHAVE_ETH_IF
;upload_port = dummy
;upload_command = ./private/upload-wt32-eth01.sh

[env:lolin32lite]
extends = common
board = lolin32
build_flags = ${common.build_flags} -DBOARD_LED_ON=0
; upload_command = ./private/upload-lolin32lite.sh

[env:lolin32]
extends = common
board = lolin32
build_flags = ${common.build_flags} -DBOARD_LED_ON=0
;upload_command = ./private/upload-lolin32.sh

; PIO Debugger settings with espressif's esp-prog
; 
; macOS 10.14.x unload FTDI kernel extension first
; otherwise the debugger will not work
; > sudo kextunload /System/Library/Extensions/AppleUSBFTDI.kext
;
;upload_protocol = esp-prog
;debug_tool = esp-prog
;debug_init_break = tbreak setup

[env:esp32cam]
extends = common
board = esp32cam
build_flags = ${common.build_flags} -DBOARD_LED_ON=0 -DBOARD_HAS_SDCARD_SLOT -DOTA_DISABLED
; board_build.partitions = huge_app.csv
;upload_command = ./private/upload-esp32cam.sh

[env:heltec_wifi_lora_32]
extends = common
board = heltec_wifi_lora_32
build_flags = ${common.build_flags} -DBOARD_LED_ON=1
;upload_command = ./private/upload-heltec_wifi_lora_32.sh

[env:esp32dev]
extends = common
board = esp32dev
build_flags = ${common.build_flags} -D BUILTIN_LED=2 -DBOARD_LED_ON=1
;upload_command = ./private/upload-esp32dev.sh

[env:esp32s3box]
extends = common
board = esp32s3box
build_flags = ${common.build_flags} -DESP32S3
;upload_command = ./private/upload-esp32s3box.sh

[env:wemos_d1_mini32]
extends = common
board = wemos_d1_mini32
build_flags = ${common.build_flags} -DBOARD_LED_ON=1
; upload_command = ./private/upload-wemos_d1_mini32.sh
